/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Aircraft as PrismaAircraft } from "@prisma/client";

export class AircraftServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.AircraftCountArgs, "select">): Promise<number> {
    return this.prisma.aircraft.count(args);
  }

  async aircraftItems(
    args: Prisma.AircraftFindManyArgs
  ): Promise<PrismaAircraft[]> {
    return this.prisma.aircraft.findMany(args);
  }
  async aircraft(
    args: Prisma.AircraftFindUniqueArgs
  ): Promise<PrismaAircraft | null> {
    return this.prisma.aircraft.findUnique(args);
  }
  async createAircraft(
    args: Prisma.AircraftCreateArgs
  ): Promise<PrismaAircraft> {
    return this.prisma.aircraft.create(args);
  }
  async updateAircraft(
    args: Prisma.AircraftUpdateArgs
  ): Promise<PrismaAircraft> {
    return this.prisma.aircraft.update(args);
  }
  async deleteAircraft(
    args: Prisma.AircraftDeleteArgs
  ): Promise<PrismaAircraft> {
    return this.prisma.aircraft.delete(args);
  }
}
