/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum, ValidateNested } from "class-validator";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { EnumFlightApproveStatus } from "./EnumFlightApproveStatus";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { MaintenanceRecordListRelationFilter } from "../../maintenanceRecord/base/MaintenanceRecordListRelationFilter";
import { EnumFlightStatus } from "./EnumFlightStatus";

@InputType()
class FlightWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  approvalComments?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  approvalStatus?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumFlightApproveStatus,
  })
  @IsEnum(EnumFlightApproveStatus)
  @IsOptional()
  @Field(() => EnumFlightApproveStatus, {
    nullable: true,
  })
  approveStatus?: "agreed" | "rejected";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  arrivalAirport?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  arrivalTime?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  associatedPilot?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  departureAirport?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  departureTime?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  flightNumber?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => MaintenanceRecordListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MaintenanceRecordListRelationFilter)
  @IsOptional()
  @Field(() => MaintenanceRecordListRelationFilter, {
    nullable: true,
  })
  maintenanceRecords?: MaintenanceRecordListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  remark?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumFlightStatus,
  })
  @IsEnum(EnumFlightStatus)
  @IsOptional()
  @Field(() => EnumFlightStatus, {
    nullable: true,
  })
  status?: "Option1";
}

export { FlightWhereInput as FlightWhereInput };
