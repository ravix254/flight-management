/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Pilot as PrismaPilot } from "@prisma/client";

export class PilotServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PilotCountArgs, "select">): Promise<number> {
    return this.prisma.pilot.count(args);
  }

  async pilots(args: Prisma.PilotFindManyArgs): Promise<PrismaPilot[]> {
    return this.prisma.pilot.findMany(args);
  }
  async pilot(args: Prisma.PilotFindUniqueArgs): Promise<PrismaPilot | null> {
    return this.prisma.pilot.findUnique(args);
  }
  async createPilot(args: Prisma.PilotCreateArgs): Promise<PrismaPilot> {
    return this.prisma.pilot.create(args);
  }
  async updatePilot(args: Prisma.PilotUpdateArgs): Promise<PrismaPilot> {
    return this.prisma.pilot.update(args);
  }
  async deletePilot(args: Prisma.PilotDeleteArgs): Promise<PrismaPilot> {
    return this.prisma.pilot.delete(args);
  }
}
